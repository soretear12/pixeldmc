import discord
from discord.ext import commands
from discord.ext.commands import TextChannelConverter
from discord.ui import View, Button, Modal, TextInput, Select
import asyncio
import os

TOKEN = os.getenv("DISCORD_BOT_TOKEN")

GUILD_ID = 1308339157265027174  # –£–∫–∞–∂–∏ ID —Å–µ—Ä–≤–µ—Ä–∞
TICKET_CHANNEL_ID = 1308340461861339150  # –ö–∞–Ω–∞–ª, –∫—É–¥–∞ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –∑–∞—è–≤–∫–∏
ADMIN_ROLE_ID = 1309011989326204998  # ID —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
MANAGER_ROLE_ID = 1308395260594094110
CREATOR_ROLE_ID = 1308346593711362068
CATEGORY_ID = 1336049134733623296  # ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –∑–∞—è–≤–æ–∫

intents = discord.Intents.default()
intents.members = True  # –î–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º —Å–µ—Ä–≤–µ—Ä–∞
intents.messages = True
intents.message_content = True
intents.dm_messages = True
intents.guilds = True

bot = commands.Bot(command_prefix="/", intents=intents)

@bot.event
async def on_ready():
    await bot.tree.sync()
    print(f"–ë–æ—Ç {bot.user} –∑–∞–ø—É—â–µ–Ω –∏ –∫–æ–º–∞–Ω–¥—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!")


class OrderForm(Modal):
    def __init__(self, service_type):
        super().__init__(title="–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞")
        self.service_type = service_type

        if service_type in ["–ü—Ä–æ—Å—Ç–æ–π –ü–∏–∫—Å–µ–ª—å-–ê—Ä—Ç", "–°–ª–æ–∂–Ω—ã–π –ü–∏–∫—Å–µ–ª—å-–ê—Ä—Ç"]:
            self.format_type = TextInput(label="üìê –§–æ—Ä–º–∞—Ç —Ä–∏—Å—É–Ω–∫–∞", required=True)
            self.outline = TextInput(label="‚úè –û–±–≤–æ–¥–∫–∞", required=True,
                                     placeholder="–î–∞/–ù–µ—Ç")
            self.details = TextInput(label="üìú –î–µ—Ç–∞–ª–∏ —Ä–∏—Å—É–Ω–∫–∞", required=True, style=discord.TextStyle.long)
            self.references = TextInput(label="üìé –†–µ—Ñ–µ—Ä–µ–Ω—Å—ã", required=False, placeholder="–û–ø–∏—Å–∞–Ω–∏–µ")
            self.promo_code = TextInput(label="üéü –ü—Ä–æ–º–æ–∫–æ–¥", required=False, placeholder="–ï—Å–ª–∏ –Ω–µ—Ç, –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º")

            self.add_item(self.format_type)
            self.add_item(self.outline)
            self.add_item(self.details)
            self.add_item(self.references)
            self.add_item(self.promo_code)

        elif service_type == "–°—Ç–∏–∫–µ—Ä-–ü–∞–∫":
            self.outline = TextInput(label="‚úè –û–±–≤–æ–¥–∫–∞", required=False,
                                     placeholder="–ï—Å–ª–∏ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è, –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º")
            self.details = TextInput(label="üìú –î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞", required=True, style=discord.TextStyle.long, placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à –∑–∞–∫–∞–∑")
            self.references = TextInput(label="üé≠ –°–≤–æ–π —Å–∫–∏–Ω", required=True, style=discord.TextStyle.long, placeholder="–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à —Å–∫–∏–Ω –Ω–∞ https://ru.namemc.com/")
            self.promo_code = TextInput(label="üéü –ü—Ä–æ–º–æ–∫–æ–¥", required=False, placeholder="–ï—Å–ª–∏ –Ω–µ—Ç, –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º")

            self.add_item(self.outline)
            self.add_item(self.details)
            self.add_item(self.references)
            self.add_item(self.promo_code)

        elif service_type == "–°–∫–∏–Ω":
            self.width_hands = TextInput(label='ü§ù –í–∏–¥ —Å–∫–∏–Ω–∞ (—Ä—É–∫)', placeholder='slim (—Ç–æ–Ω–∫–∏–µ Alex)/ classic (–®–∏—Ä–æ–∫–∏–µ Stive)', required=True)
            self.details = TextInput(label="üìú –î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞", required=True, style=discord.TextStyle.long, placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à –∑–∞–∫–∞–∑")
            self.references = TextInput(label="–†–µ—Ñ–µ—Ä–µ–Ω—Å—ã", required=False, style=discord.TextStyle.long, placeholder="–ï—Å–ª–∏ –Ω–µ—Ç—É, –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º")
            self.promo_code = TextInput(label="üéü –ü—Ä–æ–º–æ–∫–æ–¥", required=False, placeholder="–ï—Å–ª–∏ –Ω–µ—Ç, –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º")

            self.add_item(self.width_hands)
            self.add_item(self.details)
            self.add_item(self.references)
            self.add_item(self.promo_code)

        elif service_type == "–†–µ–Ω–¥–µ—Ä":
            self.details = TextInput(label="üìú –î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞", required=True, style=discord.TextStyle.long, placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à –∑–∞–∫–∞–∑")
            self.references = TextInput(label="–†–µ—Ñ–µ—Ä–µ–Ω—Å—ã", required=False, style=discord.TextStyle.long,
                                        placeholder="–ï—Å–ª–∏ –Ω–µ—Ç—É, –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º")
            self.promo_code = TextInput(label="üéü –ü—Ä–æ–º–æ–∫–æ–¥", required=False, placeholder="–ï—Å–ª–∏ –Ω–µ—Ç, –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º")

            self.add_item(self.details)
            self.add_item(self.references)
            self.add_item(self.promo_code)

        elif service_type == "–ê–≤–∞—Ç–∞—Ä":
            self.outline = TextInput(label="‚úè –û–±–≤–æ–¥–∫–∞", required=False,
                                     placeholder="–ï—Å–ª–∏ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è, –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º")
            self.details = TextInput(label="üìú –î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞", required=True, style=discord.TextStyle.long,
                                     placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à –∑–∞–∫–∞–∑")
            self.references = TextInput(label="–†–µ—Ñ–µ—Ä–µ–Ω—Å—ã", required=False, style=discord.TextStyle.long,
                                        placeholder="–ï—Å–ª–∏ –Ω–µ—Ç—É, –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º")
            self.promo_code = TextInput(label="üéü –ü—Ä–æ–º–æ–∫–æ–¥", required=False, placeholder="–ï—Å–ª–∏ –Ω–µ—Ç, –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º")

            self.add_item(self.outline)
            self.add_item(self.details)
            self.add_item(self.references)
            self.add_item(self.promo_code)




    async def on_submit(self, interaction: discord.Interaction):
        guild = interaction.guild
        message_pay = "# üí∞ –î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–Ω–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É. –û–ø–ª–∞—Ç–∏—Ç–µ –∑–∞–∫–∞–∑ –Ω–∞ –Ω–∏–∫ TupyBro –∏–ª–∏ –Ω–∞ —Å—á–µ—Ç (#381185)"
        category = discord.utils.get(guild.categories, id=CATEGORY_ID)

        overwrites = {
            guild.default_role: discord.PermissionOverwrite(read_messages=False),
            guild.get_role(ADMIN_ROLE_ID): discord.PermissionOverwrite(read_messages=True, send_messages=True),
            guild.get_role(CREATOR_ROLE_ID): discord.PermissionOverwrite(read_messages=True, send_messages=True),
            guild.get_role(MANAGER_ROLE_ID): discord.PermissionOverwrite(read_messages=True, send_messages=True),
            interaction.user: discord.PermissionOverwrite(read_messages=True, send_messages=True)
        }

        ticket_channel = await guild.create_text_channel(name=f"–∑–∞–∫–∞–∑-{interaction.user.display_name}",
                                                         category=category, overwrites=overwrites)

        embed = discord.Embed(title="–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∑–∞–∫–∞–∑ üé®", color=discord.Color.blue())
        embed.add_field(name="üìå –í–∏–¥ —É—Å–ª—É–≥–∏", value=self.service_type, inline=False)

        if hasattr(self, 'format_type'):
            embed.add_field(name="üìê –§–æ—Ä–º–∞—Ç —Ä–∏—Å—É–Ω–∫–∞", value=self.format_type.value, inline=False)
        if hasattr(self, 'outline'):
            embed.add_field(name="‚úè –û–±–≤–æ–¥–∫–∞", value=self.outline.value if self.outline.value else "–ù–µ —É–∫–∞–∑–∞–Ω–∞", inline=False)
        if hasattr(self, 'width_hands'):
            embed.add_field(name="ü§ö –í–∏–¥ —Å–∫–∏–Ω–∞", value=self.width_hands.value, inline=False)
        embed.add_field(name="üìú –î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞", value=self.details.value, inline=False)
        if hasattr(self, 'references'):
            embed.add_field(name="üìé –†–µ—Ñ–µ—Ä–µ–Ω—Å—ã", value=self.references.value if self.references.value else "–ù–µ—Ç",
                            inline=False)
        embed.add_field(name="üéü –ü—Ä–æ–º–æ–∫–æ–¥", value=self.promo_code.value if self.promo_code.value else "–ù–µ—Ç",
                        inline=False)
        embed.set_footer(text=f"–ó–∞–∫–∞–∑—á–∏–∫: {interaction.user.display_name} ({interaction.user.id})")

        close_button = Button(label="–ó–∞–∫—Ä—ã—Ç—å –∑–∞—è–≤–∫—É", style=discord.ButtonStyle.danger)

        await ticket_channel.send(message_pay)


        async def close_ticket(interaction: discord.Interaction):
            if interaction.user.guild_permissions.manage_channels:
                await interaction.response.send_message("‚úÖ –ó–∞—è–≤–∫–∞ –∑–∞–∫—Ä—ã—Ç–∞ –∏ –∫–∞–Ω–∞–ª —É–¥–∞–ª–µ–Ω.", ephemeral=True)
                await ticket_channel.delete()
            else:
                await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –∑–∞—è–≤–∫–∏.", ephemeral=True)

        close_button.callback = close_ticket
        view = View()
        view.add_item(close_button)

        await ticket_channel.send(
            f"{interaction.guild.get_role(ADMIN_ROLE_ID).mention} {interaction.guild.get_role(CREATOR_ROLE_ID).mention} {interaction.guild.get_role(MANAGER_ROLE_ID).mention}, –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞!",
            embed=embed, view=view)
        await interaction.response.send_message(
            f"‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞! –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –∫–∞–Ω–∞–ª {ticket_channel.mention} –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è.", ephemeral=True)


class TicketButton(View):
    def __init__(self):
        super().__init__(timeout=None)  # –û—Ç–∫–ª—é—á–∞–µ–º —Ç–∞–π–º–µ—Ä, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∞ —Ä–∞–±–æ—Ç–∞–ª–∞ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ

    @discord.ui.button(label="–°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç", style=discord.ButtonStyle.green, custom_id="persistent_ticket_button")
    async def create_ticket(self, interaction: discord.Interaction, button: Button):
        await interaction.response.send_message("–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –≤–∞–º —É—Å–ª—É–≥—É:", view=ServiceSelectionView(), ephemeral=True)


class ServiceSelect(Select):
    def __init__(self):
        options = [
            discord.SelectOption(label="–ü—Ä–æ—Å—Ç–æ–π –ü–∏–∫—Å–µ–ª—å-–ê—Ä—Ç", emoji="üñº"),
            discord.SelectOption(label="–°–ª–æ–∂–Ω—ã–π –ü–∏–∫—Å–µ–ª—å-–ê—Ä—Ç", emoji="üñº"),
            discord.SelectOption(label="–°—Ç–∏–∫–µ—Ä-–ü–∞–∫", emoji="üß©"),
            discord.SelectOption(label="–°–∫–∏–Ω", emoji="üé≠"),
            discord.SelectOption(label="–†–µ–Ω–¥–µ—Ä", emoji="üéû"),
            discord.SelectOption(label="–ê–≤–∞—Ç–∞—Ä", emoji="üë®‚Äçü¶≤")
        ]
        super().__init__(placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –≤–∞–º —É—Å–ª—É–≥—É", options=options)

    async def callback(self, interaction: discord.Interaction):
        await interaction.response.send_modal(OrderForm(self.values[0]))


class ServiceSelectionView(View):
    def __init__(self):
        super().__init__(timeout=None)  # –û—Ç–∫–ª—é—á–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è –≤—Å–µ—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π
        self.add_item(ServiceSelect())


@bot.command()
async def ticket(ctx):
    view = TicketButton()
    await ctx.send("–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç:", view=view)


@bot.event
async def setup_hook():
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞
    bot.add_view(TicketButton())  # –î–ª—è —Ä–∞–±–æ—Ç—ã –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞



class ArtistSelectionView(View):
    def __init__(self, zakaz: discord.Member, channel: discord.TextChannel, message: discord.Message):
        super().__init__()
        self.zakaz = zakaz
        self.channel = channel
        self.message = message

    async def delete_message(self):
        if self.message:
            try:
                await self.message.delete()
            except discord.NotFound:
                pass  # –°–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ

    @discord.ui.button(label="Derti", style=discord.ButtonStyle.primary)
    async def derti_callback(self, interaction: discord.Interaction, button: Button):
        await interaction.response.defer()

        await interaction.followup.send(f"–í—ã –≤—ã–±—Ä–∞–ª–∏ <@{834483965409624084}> –¥–ª—è –∑–∞–∫–∞–∑–∞ <@{self.zakaz.id}>.")

        member = interaction.guild.get_member(834483965409624084)
        if member is None:
            try:
                member = await interaction.guild.fetch_member(834483965409624084)
            except discord.NotFound:
                await interaction.followup.send("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Derti –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.")
                return

        try:
            await member.send(f"–¢–µ–ø–µ—Ä—å –≤—ã –∑–∞–Ω–∏–º–∞–µ—Ç–µ—Å—å –∑–∞–∫–∞–∑–æ–º <@{self.zakaz.id}>.")
            await asyncio.sleep(1)
            await member.send(f"–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –∑–∞–∫–∞–∑–æ–º –≤ –∫–∞–Ω–∞–ª–µ {self.channel.mention}.")

            overwrite = discord.PermissionOverwrite(read_messages=True, send_messages=True)
            await self.channel.set_permissions(member, overwrite=overwrite)

        except discord.Forbidden:
            await interaction.followup.send("‚ùå –ë–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–° —Ö—É–¥–æ–∂–Ω–∏–∫—É Derti.")

        await self.delete_message()
        self.stop()

    @discord.ui.button(label="MILK AB", style=discord.ButtonStyle.success)
    async def milkab_callback(self, interaction: discord.Interaction, button: Button):
        await interaction.response.defer()

        await interaction.followup.send(f"–í—ã –≤—ã–±—Ä–∞–ª–∏ <@{1070040412250714192}> –¥–ª—è –∑–∞–∫–∞–∑–∞ <@{self.zakaz.id}>.")

        member = interaction.guild.get_member(1070040412250714192)
        if member is None:
            try:
                member = await interaction.guild.fetch_member(1070040412250714192)
            except discord.NotFound:
                await interaction.followup.send("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å MILK AB –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.")
                return

        try:
            await member.send(f"–¢–µ–ø–µ—Ä—å –≤—ã –∑–∞–Ω–∏–º–∞–µ—Ç–µ—Å—å –∑–∞–∫–∞–∑–æ–º <@{self.zakaz.id}>.")
            await asyncio.sleep(1)
            await member.send(f"–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –∑–∞–∫–∞–∑–æ–º –≤ –∫–∞–Ω–∞–ª–µ {self.channel.mention}.")

            overwrite = discord.PermissionOverwrite(read_messages=True, send_messages=True)
            await self.channel.set_permissions(member, overwrite=overwrite)

        except discord.Forbidden:
            await interaction.followup.send("‚ùå –ë–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–° —Ö—É–¥–æ–∂–Ω–∏–∫—É MILK AB.")

        await self.delete_message()
        self.stop()


@bot.tree.command(name='skinmaker', description='–í—ã–±–æ—Ä —Ö—É–¥–æ–∂–Ω–∏–∫–∞')
async def skinmaker(interaction: discord.Interaction, zakaz: discord.Member):
    await interaction.response.defer()
    role_admin_id = 1309011989326204998
    role_creator_id = 1308346593711362068

    if not any(role.id in [role_admin_id, role_creator_id] for role in interaction.user.roles):
        await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.", ephemeral=True)
        return

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    embed1 = discord.Embed()
    embed1.set_image(url="https://media.discordapp.net/attachments/1233329242696323124/1337324435799019621/Derti.png?ex=67a707ef&is=67a5b66f&hm=b5aa3e9899829b3f13884ecd2f360a30556ba4e33ab42513d12dc1031019d067&=&format=webp&quality=lossless&width=910&height=910")

    embed2 = discord.Embed()
    embed2.set_image(url="https://media.discordapp.net/attachments/1233329242696323124/1337324436126306374/MILK_AB.png?ex=67a707ef&is=67a5b66f&hm=795b3debf25099ca025b9135a4da023e6e7c496c6924904ed488223b6f4c8182&=&format=webp&quality=lossless&width=910&height=910")

    message = await interaction.channel.send(
        f"<@{zakaz.id}>, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–µ–±–µ —Ö—É–¥–æ–∂–Ω–∏–∫–∞:",
        view=ArtistSelectionView(zakaz, interaction.channel, None),
        embeds=[embed1, embed2]
    )

    # –ü–µ—Ä–µ–¥–∞—ë–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ View –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
    view = ArtistSelectionView(zakaz, interaction.channel, message)
    await message.edit(view=view)

@bot.tree.command(name='test', description='–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞')
async def test(interaction: discord.Interaction):
    await interaction.response.send_message('PixelDMC –∫—Ä—É—Ç—ã–µ —É—Å–ª—É–≥–∏')  # ‚úÖ Correct

@bot.tree.command(name='pay_summ', description="–¶–µ–Ω–∞ –∑–∞ —É—Å–ª—É–≥—É")
@commands.has_any_role(ADMIN_ROLE_ID, MANAGER_ROLE_ID, CREATOR_ROLE_ID)
async def pay_summ(interaction: discord.Interaction):
    await interaction.response.send_message('–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É:', ephemeral=True)

    def check(m):
        return m.author == interaction.user and m.channel == interaction.channel

    try:
        msg = await bot.wait_for('message', check=check, timeout=60.0)
        ar = msg.content
        await interaction.followup.send(f'–° –≤–∞—Å {ar} –∞—Ä. –†–µ–∫–≤–∏–∑–∏—Ç—ã —É–∫–∞–∑–∞–Ω—ã –≤ —Å–∞–º–æ–º –ø–µ—Ä–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏!', ephemeral=False)
    except asyncio.TimeoutError:
        await interaction.followup.send('–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.', ephemeral=True)


@bot.event
async def on_ready():
    await bot.tree.sync()
    print(f"–ë–æ—Ç {bot.user} –∑–∞–ø—É—â–µ–Ω –∏ –∫–æ–º–∞–Ω–¥—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!")

bot.run(TOKEN)